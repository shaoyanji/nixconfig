# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot = {
    initrd = {
      availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" ];
      supportedFilesystems = [ "nfs" ];
      kernelModules = [ "kvm-amd" "nfs" ];
    };
    kernelModules = [ "kvm-amd" "nfs" ];
    extraModulePackages = [ ];
  };
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/292db143-7e80-45c4-b940-34d77e58b5c7";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-d8c4ffdb-dd14-4836-9e1b-6c400362987d".device = "/dev/disk/by-uuid/d8c4ffdb-dd14-4836-9e1b-6c400362987d";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A365-7B39";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

 swapDevices =
    [ { device = "/dev/disk/by-uuid/30fa7541-b3db-442a-8450-105d555e4eba"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
