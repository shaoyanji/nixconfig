# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid"];
      supportedFilesystems = [];
    };
    kernelModules = ["kvm-amd"];
    extraModulePackages = [];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/8991fddd-ea02-43a0-9d67-82a65d916bc0";
    fsType = "btrfs";
    options = ["subvol=nix" "compress=zstd" "noatime"];
  };
  fileSystems."/" = {
    device = "/dev/disk/by-uuid/292db143-7e80-45c4-b940-34d77e58b5c7";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-a03ed119-37a7-4609-aca5-679ba0eccddf".device = "/dev/disk/by-uuid/a03ed119-37a7-4609-aca5-679ba0eccddf";
  boot.initrd.luks.devices."luks-d8c4ffdb-dd14-4836-9e1b-6c400362987d".device = "/dev/disk/by-uuid/d8c4ffdb-dd14-4836-9e1b-6c400362987d";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/A365-7B39";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };
  fileSystems."/home/devji/.steamlib" = {
    device = "/dev/disk/by-uuid/8991fddd-ea02-43a0-9d67-82a65d916bc0";
    fsType = "btrfs";
    options = ["subvol=steam" "compress=zstd" "noatime"];
  };
  fileSystems."/var/lib/private/ollama" = {
    device = "/dev/disk/by-uuid/8991fddd-ea02-43a0-9d67-82a65d916bc0";
    fsType = "btrfs";
    options = ["subvol=ollama" "compress=zstd" "noatime"];
  };
  swapDevices = [
    {device = "/dev/disk/by-uuid/30fa7541-b3db-442a-8450-105d555e4eba";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.cni0.useDHCP = lib.mkDefault true;
  # networking.interfaces.flannel.1.useDHCP = lib.mkDefault true;
  # networking.interfaces.incusbr0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7e5b2f4a.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
