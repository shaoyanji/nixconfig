version: "3"
vars:
    EMAIL: 100967396+shaoyanji@users.noreply.github.com
    ENC_DETASKFILE: DE-Taskfile.yaml
    ENC_TASKFILE: Taskfile.yaml
    ENC_SECRETS: secrets.yaml
    ENC_ENVS: apikeys.yaml
    SECRETS: modules/secrets
    PI: minyx
    SERVER: thinsandy
menu:
    - exit
    - rebuild
    - edit-config
    - update
    - load
    - browse
    - new
    - incus
    - sudologinssh
load:
    - load-env
    - load-taskfile
    - exit
rebuild:
    - nixos-rebuild
    - darwin-rebuild
    - home-manager-switch
    - wsl-rebuild
    - orb-rebuild
    - push-rpi-rebuild
    - push-thin-rebuild
    - push-fuji-rebuild
    - exit
browse:
    - browse-notes
    - browse-internet
    - projects
    - exit
edit-config:
    - edit-taskfile
    - edit-nixos-home-task
    - edit-global
    - edit-secrets
    - edit-sops
    - edit-sops-config
    - edit-home-manager
    - edit-shell-config
    - exit
update:
    - git-quick-push
    - git-quick-pull
    - update-flake
    - updatekeys-sops
    - exit
new:
    - generate-secrets
    - copy-nas-secrets
    - exit
tasks:
    exit:
        cmds:
            - exit
        silent: true
    fzf:
        cmds:
            - task $(cat Taskfile.yml | yq '.tasks|keys|.[]'|fzf)
        silent: true
    default:
        cmds:
            - task $(cat Taskfile.yml | yq '.menu.[]' | gum choose )
        silent: true
    rebuild:
        cmds:
            - task $(cat Taskfile.yml | yq '.rebuild.[]' | gum choose )
    pre-hook-rebuild:
        cmds: null
        # - git submodule update --init --remote --recursive
        # - nix flake update zen-browser nix-homebrew |& nom
    nixos-rebuild:
        # vars: 
        # MIMELIST: ~/.config/mimeapps.list
        cmds:
            - task pre-hook-rebuild
            - task switch:nixos
            - sops -d {{.SECRETS}}/{{.ENC_DETASKFILE}} > ~/Taskfile.yml
    darwin-rebuild:
        cmds:
            # - nix flake update nix-homebrew
            - task pre-hook-rebuild
            - task switch:darwin
            - sops -d {{.SECRETS}}/{{.ENC_DETASKFILE}} > ~/Taskfile.yml
    home-manager-switch:
        cmds:
            - task pre-hook-rebuild
            - home-manager switch --flake .?submodules=1#$(hostname) |& nom
            - task git-build-push
            - sops -d {{.SECRETS}}/{{.ENC_DETASKFILE}} > ~/Taskfile.yml
    wsl-rebuild:
        cmds:
            - task pre-hook-rebuild
            - sudo nixos-rebuild switch --flake .?submodules=1#guckloch --use-substitutes |& nom
            - task git-build-push
    orb-rebuild:
        cmds:
            - task pre-hook-rebuild
            - sudo nixos-rebuild switch --flake .?submodules=1#$(hostname) --impure |& nom
            - task git-build-push
            - sops -d {{.SECRETS}}/{{.ENC_DETASKFILE}} > ~/Taskfile.yml
    push-rpi-rebuild:
        cmds:
            - task prb:{{.PI}}
    push-thin-rebuild:
        cmds:
            - task prb:thinsandy
    push-fuji-rebuild:
        cmds:
            - task prb:mtfuji
    prb:*:
        vars:
            HOST: '{{index .MATCH 0}}'
        cmds:
            - nixos-rebuild switch --use-remote-sudo --target-host {{.HOST}} --fast --flake .?submodules=1#{{.HOST}} |& nom && task git-prehook && git commit -m "nix-build was successful on {{.HOST}}" && task git-posthook
    boot:*:
        vars:
            OS: '{{index .MATCH 0}}'
        cmds:
            - sudo {{.OS}}-rebuild boot --flake .?submodules=1#$(hostname) |& nom
            - task git-build-push
    switch:*:
        vars:
            OS: '{{index .MATCH 0}}'
        cmds:
            - sudo {{.OS}}-rebuild switch --flake .?submodules=1#$(hostname) |& nom
            - task git-prehook
            - git commit -m "$(hostname) $({{.OS}}-rebuild list-generations | awk 'NR==2 {print $1, $2, $6; exit}')"
            - task git-posthook
    load:
        cmds:
            - task $(cat Taskfile.yml | yq '.load.[]' | gum choose )
    load-env:
        cmds:
            - task api:API
            - task api:POP
            - task api:TOKEN
    load-taskfile:
        cmds:
            - sops -d {{.SECRETS}}/{{.ENC_TASKFILE}} > ./Taskfile.yml
    api:*:
        vars:
            API: '{{index .MATCH 0}}'
        cmds:
            - sops -d {{.SECRETS}}/{{.ENC_ENVS}} | yq -o=shell . | grep {{.API}}
    browse:
        cmds:
            - task $(cat Taskfile.yml | yq '.browse.[]' | gum choose )
    browse-notes:
        cmds:
            - $EDITOR ~/Documents/Obsidian-Git-Sync/quicknote.md
    browse-internet:
        cmds:
            - zen https://duckduckgo.com
    browse-projects:
        cmds:
            - zen https://shaoyanji.github.io
    edit-config:
        cmds:
            - task $(cat Taskfile.yml | yq '.edit-config.[]' | gum choose )
    edit-taskfile:
        cmds:
            - sops edit {{.SECRETS}}/{{.ENC_TASKFILE}}
            - cd {{.SECRETS}} && git add {{.ENC_TASKFILE}} && git commit -m "taskfile - update" && git push origin HEAD:master --force
            - sops -d {{.SECRETS}}/{{.ENC_TASKFILE}} > ./Taskfile.yml
    edit-nixos-home-task:
        cmds:
            - sops edit {{.SECRETS}}/{{.ENC_DETASKFILE}}
            - cd {{.SECRETS}} && git add {{.ENC_DETASKFILE}} && git commit -m "detaskfile - update" && git push origin HEAD:master --force
            - sops -d {{.SECRETS}}/{{.ENC_DETASKFILE}} > ~/Taskfile.yml
    edit-global:
        cmds:
            - $EDITOR ./modules/global/global.nix
    edit-secrets:
        cmds:
            - sops edit {{.SECRETS}}/{{.ENC_SECRETS}}
            - rm {{.SECRETS}}.yaml && cp {{.SECRETS}}/{{.ENC_SECRETS}} {{.SECRETS}}.yaml
            - cd {{.SECRETS}} && git add {{.ENC_SECRETS}} && git commit -m "secrets - update" && git push origin HEAD:master --force
    edit-sops:
        cmds:
            - $EDITOR .sops.yaml
            - task updatekeys-sops
    edit-sops-config:
        cmds:
            - $EDITOR ./modules/sops.nix
    edit-home-manager:
        cmds:
            - $EDITOR ./modules/global/home.nix
    edit-shell-config:
        cmds:
            - $EDITOR ./modules/shell/default.nix
    sops:*:
        vars:
            QUERY: '{{index .MATCH 0}}'
        cmds:
            - sops -d {{.SECRETS}}/{{.ENC_SECRETS}} | yq -o=shell . | grep {{.QUERY}}  | awk -F'=' '{print $2}'
    sopsfzf:
        cmds:
            - sops -d {{.SECRETS}}/{{.ENC_SECRETS}} | yq -o=shell . | fzf  | awk -F'=' '{print $2}' | wl-copy
    git-quick-push:
        cmds:
            - task git-prehook
            - 'git commit -m "tidy: config update from $(hostname)"'
            - task git-posthook
    git-build-push:
        cmds:
            - task git-prehook
            - git commit -m "nix-build was successful on $(uname -a)"
            - task git-posthook
    git-quick-pull:
        cmds:
            - git pull --recurse-submodules
            - task load-taskfile
    git-prehook:
        cmds:
            - rm ./Taskfile.yml
            - git add .
            - sops -d {{.SECRETS}}/{{.ENC_TASKFILE}} > ./Taskfile.yml
    git-posthook:
        cmds:
            - git push
            # - git push && task verntil
            # - ssh thinsandy "cd /srv/data/nixconfig; git pull;"
    verntil:
        vars:
            NIXFLAKE: ./.config/home-manager/nixconfig
        cmds:
            - rsync -r index.html jisifu@vern.cc:~/public_html/index.html
            # - ssh jisifu@vern.cc "cd {{.NIXFLAKE}}; git pull; home-manager switch --flake .?submodules=1#verntil"
    update:
        cmds:
            - task $(cat Taskfile.yml | yq '.update.[]' | gum choose )
    update-flake:
        cmds:
            - git branch -D update || true
            - git switch -c update
            - nix flake update
            - git add flake.lock
            - git commit -s -m "flake update"
            - git push -f
            - git switch main
    upgrade-flake:
        cmds:
            - git switch main
            - git merge update
            - git branch -d update
    updatekeys-sops:
        cmds:
            - sops updatekeys {{.SECRETS}}/*.yaml
            - cd {{.SECRETS}} && git add *.yaml .sops.yaml && git commit -m "updated sops keys" && git push
    new:
        cmds:
            - task $(cat Taskfile.yml | yq '.new.[]' | gum choose )
    generate-secrets:
        cmds:
            - ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -C "{{.EMAIL}}"
            - mkdir -p ~/.config/sops/age
            - nix-shell -p ssh-to-age --run "ssh-to-age -private-key -i ~/.ssh/id_ed25519 > ~/.config/sops
            - echo '&'$(hostname)' '$(nix-shell -p ssh-to-age --run "ssh-to-age < ~/.ssh/id_ed25519.pub")'
            - echo '&'$(hostname)'host '$(nix-shell -p ssh-to-age --run "ssh-to-age < /etc/ssh/ssh_host_ed25519_key.pub")'
    copy-nas-secrets:
        vars:
            NAS_PATH: /Volumes/data/security/USB\ Copy_2024-11-24_131715
        cmds:
            - mkdir -p ~/.config/sops/age
            - cp {{.NAS_PATH}}/age-key.txt ~/.config/sops/age/keys.txt
    incus:
        cmds:
            - sudo incus launch "images:nixos/unstable" nixos -c security.nesting=true
            # - sudo incus launch --vm "images:nixos/unstable" nixos -c security.secureboot=false
            - sudo incus list
            - sudo incus console nixos
    sudologinssh:
        cmds:
            - sudo ssh $(sops -d --extract '["server"]["commands"]' {{.SECRETS}}/{{.ENC_SECRETS}} | gum choose)
