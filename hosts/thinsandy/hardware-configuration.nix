# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["ahci" "xhci_pci" "usb_storage" "usbhid" "uas" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b5b44066-aac9-450d-a47c-60285c567ba6";
    fsType = "btrfs";
    options = ["subvol=root" "compress=zstd"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/b5b44066-aac9-450d-a47c-60285c567ba6";
    fsType = "btrfs";
    options = ["subvol=home" "compress=zstd"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/e8622c5d-270e-47fa-a1ec-3aca0ef95d8e";
    fsType = "btrfs";
    options = ["subvol=nix" "compress=zstd" "noatime"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/12CE-A600";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };
  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/e8622c5d-270e-47fa-a1ec-3aca0ef95d8e";
    fsType = "btrfs";
    options = ["subvol=swap" "noatime"];
  };
  swapDevices = [{device = "/swap/swapfile";}];

  fileSystems."/srv/data" = {
    device = "/dev/disk/by-uuid/d3c13746-8d51-4fce-bf0e-655153229441";
    fsType = "btrfs";
    options = ["subvol=data" "compress=zstd"];
  };
  fileSystems."/export/data" = {
    device = "/srv/data";
    options = ["bind"];
  };
  services.nfs.server.enable = true;
  services.nfs.server.exports = ''
    /export         192.168.178.0/24(rw,fsid=0,no_subtree_check)
        /export/data 192.168.178.0/24(rw,nohide,insecure,no_subtree_check)
  '';
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
