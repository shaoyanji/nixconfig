# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    #    device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
    #    fsType = "ext4";
    device = "none";
    fsType = "tmpfs";
    options = ["size=500M" "mode=755"];
  };
  fileSystems."/mnt/oldroot" = {
    depends = [
      # The mounts above have to be mounted in this given order
    ];
    device = "/dev/disk/by-uuid/44444444-4444-4444-8888-888888888888";
    fsType = "ext4";
  };
  fileSystems."/home/devji" = {
    depends = [
      # The mounts above have to be mounted in this given order
      "/mnt/oldroot"
    ];
    device = "/mnt/oldroot/home/devji";
    fsType = "none";
    options = [
      "bind"
      "rw" # The filesystem hierarchy will be read-only when accessed from /mnt/aggregator/app1
    ];
  };

  #  fileSystems."/home/devji" = {
  #    device = "none";
  #    fsType = "tmpfs"; # Can be stored on normal drive or on tmpfs as well
  #    options = ["size=250M" "mode=777"];
  #  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-label/NIXER";
    fsType = "ext4";
    neededForBoot = true;
    options = ["noatime"];
  };

  fileSystems."/nix/persist" = {
    depends = [
      # The mounts above have to be mounted in this given order
      "/nix"
    ];
    device = "/nix/persist";
    fsType = "none";
    options = [
      "bind"
      "rw"
    ];
  };
  #  fileSystems."/mnt/hdd" =
  #  {
  #    device = "/dev/disk/by-uuid/0695-8114";
  #    fsType = "exfat"
  #  };

  #  fileSystems."/nix" = {
  #    device = "/dev/disk/by-uuid/0695-8114/nix";
  #    fsType = "exfat";
  #  };

  #  fileSystems."/persist" =
  #  {
  #    device = "/dev/disk/by-uuid/0695-8114/persist";
  #    fsType = "exfat";
  #  };
  #  impermanence = {
  #    enable = true;
  #    path = /persist;
  #    directories = [
  #      { directory = /var/www/${cfg.domainName}; }
  #      { directory = /var/lib/maubot; }
  #      { directory = /var/lib/fdroid; }
  #      { directory = config.mailserver.dkimKeyDirectory; }
  #      { directory = config.mailserver.mailDirectory; }

  #      { directory = /home/devji; }
  #      { directory = /root; }
  #      { directory = /nix; }
  #    ];
  #  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enu1u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
}
